<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hu.dg.repository.ArticleRepository">
    <resultMap id="m_article" type="com.hu.dg.domain.Article">
        <id column="f_id" property="id"/>
        <result column="f_title" property="title"/>
        <result column="f_user_id" property="userId"/>
        <result column="f_user_nickname" property="userNickname"/>
        <result column="f_category" property="category"/>
        <result column="f_content" property="content"/>
        <result column="f_description" property="description"/>
        <result column="f_tag" property="tag"/>
        <result column="f_time" property="time"/>
        <result column="f_status" property="status"/>
        <result column="f_open" property="open"/>
        <result column="f_image" property="image"/>
        <result column="f_original_url" property="originalUrl"/>
    </resultMap>
    <insert id="create" parameterType="com.hu.dg.domain.Article">
insert into m_article ( f_id,f_title,f_user_id,f_user_nickname,f_category,f_content,f_description,
f_tag,f_time,f_status,f_open,f_image,f_original_url) values
(#{id,jdbcType=INTEGER},#{title,jdbcType=VARCHAR},#{userId,jdbcType=INTEGER},#{userNickname,jdbcType=VARCHAR},
#{category,jdbcType=VARCHAR},#{content,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR},#{tag,jdbcType=VARCHAR},
#{time,jdbcType=BIGINT},#{status,jdbcType=VARCHAR},#{open,jdbcType=TINYINT},#{image,jdbcType=VARCHAR},
#{originalUrl,jdbcType=VARCHAR})
</insert>
    <select id="list" resultMap="m_article">
select f_id,f_title,f_user_id,f_user_nickname,f_category,f_description,
f_tag,f_time,f_status,f_open,f_image
from m_article
where 1
        <if test="userId != null and userId != '' ">
            and f_user_id = #{userId}
        </if>
        <if test="keywords !=null and keywords !='' ">
            and( f_title like CONCAT(CONCAT('%',#{keywords}),'%')
            or f_tag like CONCAT(CONCAT('%',#{keywords}),'%'))
        </if>
        <if test="articleId != null and article!='' ">
            and f_id!=#{articleId}
        </if>
order by f_id desc
limit #{start},#{size}
</select>
    <select id="listHotArticle" resultMap="m_article">
        select a.f_id,a.f_title,a.f_user_id,a.f_user_nickname,a.f_category,a.f_description,
a.f_tag,a.f_time,a.f_status,a.f_open,a.f_image
from m_article a
left join m_article_about_info i on a.f_id=i.f_article_id
        where 1
        <if test="articleId != null and article!='' ">
            and a.f_id!=#{articleId}
        </if>
order by i.f_browse_count desc
limit #{start},#{size}
    </select>
    <select id="getCount" resultType="int">select count(f_id) FROM m_article</select>
    <select id="getMaxId" resultType="int">select IFNULL(max(f_id),10000) FROM m_article</select>
    <select id="findById" resultMap="m_article">select * from m_article where f_id=#{id}</select>
    <select id="findSimpleById" resultMap="m_article">
select f_id,f_user_id
from m_article where f_id=#{id}</select>
    <select id="findUserIdByArticleId" resultType="int">
        select f_user_id from m_article where f_id=#{id}
    </select>
    <update id="changeOpen">
         UPDATE m_article set f_open=#{open}
        WHERE f_id=#{id}
    </update>
    <delete id="delete">
        delete from m_article where f_id=#{id} and f_user_id=#{userId}
    </delete>
    <update id="update" parameterType="com.hu.dg.domain.Article">
        update m_article set f_title=#{title,jdbcType=VARCHAR},f_category=#{category,jdbcType=VARCHAR},
        f_content=#{content,jdbcType=VARCHAR},f_description=#{description,jdbcType=VARCHAR},
        f_tag=#{tag,jdbcType=VARCHAR},f_time=#{time,jdbcType=BIGINT},f_status=#{status,jdbcType=VARCHAR},
        f_open=#{open,jdbcType=TINYINT},f_image=#{image,jdbcType=VARCHAR},f_original_url=#{originalUrl,jdbcType=VARCHAR}
        where f_id=#{id}</update>
</mapper>