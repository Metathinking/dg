<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hu.dg.repository.UserRepository">
    <resultMap id="m_user" type="com.hu.dg.domain.User">
        <id column="f_id" property="id"/>
        <result column="f_nickname" property="nickname"/>
        <result column="f_real_name" property="realName"/>
        <result column="f_password" property="password"/>
        <result column="f_email" property="email"/>
        <result column="f_email_validate" property="emailValidate"/>
        <result column="f_status" property="status"/>
        <result column="f_time" property="time"/>
    </resultMap>
    <insert id="register" parameterType="com.hu.dg.domain.User">
insert into m_user ( f_id,f_nickname,f_real_name,f_password,f_status,f_time,f_email,f_email_validate)
values (#{id,jdbcType=INTEGER},#{nickname,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},
#{status,jdbcType=VARCHAR},#{time,jdbcType=BIGINT},#{email,jdbcType=VARCHAR},#{emailValidate,jdbcType=TINYINT})
    </insert>
    <select id="find" parameterType="com.hu.dg.domain.User"  resultMap="m_user">
        select f_id,f_nickname,f_real_name,f_status,f_time,f_email,f_email_validate
        FROM  m_user where (f_nickname=#{nickname} or f_email=#{nickname})and f_password=#{password}
    </select>
    <select id="list" resultMap="m_user">select * from m_user order by f_id desc limit #{start},#{size}</select>
    <select id="getCountByNickname" resultType="int">
select count(f_id)
from m_user where f_nickname=#{nickname}</select>
    <select id="getCountByEmail" resultType="int">
select count(f_id)
from m_user where f_email=#{email}</select>
    <select id="getCount" resultType="int">select count(f_id) FROM m_user</select>
    <select id="getMaxId" resultType="int">select IFNULL(max(f_id),10000) FROM m_user</select>
    <update id="updateNickname">
        UPDATE m_user set f_nickname=#{nickname}
        where f_id=#{id}
    </update>
    <update id="updatePassword">
        UPDATE m_user set f_password=#{password}
        where f_id=#{id}
    </update>
    <delete id="delete">
        delete from m_user where f_id=#{id}
    </delete>
    <select id="findById" resultMap="m_user">
select f_id,f_nickname,f_real_name,f_status,f_time,f_email,f_email_validate
from m_user
where f_id=#{id}</select>
    <update id="emailValidate">
        UPDATE m_user set f_email_validate=1
        WHERE f_id=#{id}
    </update>
    <select id="listByEmail" resultMap="m_user">
        select f_id,f_nickname,f_real_name,f_status,f_time,f_email,f_email_validate
        from m_user
        where f_email=#{email}
    </select>
</mapper>